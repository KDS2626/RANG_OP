/*
* Calculator program Ver 0.1
* 작성자 : 신예랑
* 내  용: 계산기 프로그램 ver 0.1(C++스타일 코딩)
* 운영체제 : 윈도우
* 클라이언트
*/

#include <iostream>
#include <stdlib.h>
#include <winsock2.h>
#include <WS2tcpip.h>
#define BUF_SIZE 100
using namespace std;

void Error_handling(const char* msg)
{
    fputs(msg, stderr);
    fputc('\n', stderr);
    exit(1);
}

class opinfo
{
public:

    int opnd_cnt;
    int num1[BUF_SIZE];
    double num2[BUF_SIZE];
    int result1; 
    double result2;
    char op;

    opinfo(int _opnd_cnt = 0, int _num1[] = 0, double _num2[] = 0, int result1 = 0, int result2 = 0, char _op = 0)
        : opnd_cnt(_opnd_cnt), result1(result1), result2(result2), op(_op)
    {
        if (_op == '/')
        {
            for (int i = 0; i < _opnd_cnt; i++)
                num2[i] = _num2[i];
        }
        else
        {
            for (int i = 0; i < _opnd_cnt; i++)
                num1[i] = _num1[i];
        }
    }
    double GetDoubleResult() const { return result2; }
    int GetIntResult() const { return result1; }
};

int main(int argc, char* argv[])
{
    WSADATA wsaData;
    SOCKET sock;
    SOCKADDR_IN servAddr;
    int i;

    if (argc != 3)
    {
        cout << "Usage : " << argv[0] << "<IP> <Port>" << endl;
        exit(1);
    }

    if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0)
        Error_handling("WSAStartup() error");

    sock = socket(PF_INET, SOCK_STREAM, 0);
    if (sock == INVALID_SOCKET)
        Error_handling("socket() error");

    memset(&servAddr, 0, sizeof(servAddr));
    servAddr.sin_family = AF_INET;
    inet_pton(AF_INET, argv[1], &servAddr.sin_addr);
    servAddr.sin_port = htons(atoi(argv[2]));

    if (connect(sock, (SOCKADDR*)&servAddr, sizeof(servAddr)) == SOCKET_ERROR)
        Error_handling("connect() error");

    int Cnt, result1 = 0;
    double result2 = 0;
    int Num1[BUF_SIZE] = { 0 };
    double Num2[BUF_SIZE] = { 0 };
    char Op;

    cout << "Operand count : ";
    cin >> Cnt;

    cout << "Operator : ";
    cin >> Op;

    if (Op != '+' && Op != '-' && Op != '*' && Op != '/')
        Error_handling("잘못 입력하였습니다. 프로그램을 종료합니다.");

    if (Op == '/')
    {
        for (i = 0; i < Cnt; i++)
        {
            cout << "Operand" << i + 1 << " : ";
            cin >> Num2[i];
        }

        opinfo op(Cnt, 0, Num2, 0, 0, Op);

        if (send(sock, (char*)&op, sizeof(op), 0) == SOCKET_ERROR)
            Error_handling("send()dassdad error");
        if (recv(sock, (char*)&op, sizeof(op), 0) == SOCKET_ERROR)
            Error_handling("recv() error");

        cout << "Operation result : " << op.GetDoubleResult() << endl;
    }

    else
    {
        for (i = 0; i < Cnt; i++)
        {
            printf("Operand %d : ", i + 1);
            scanf_s("%d", &Num1[i]);
        }

        opinfo op(Cnt, Num1, 0, 0, 0, Op);

        if (send(sock, (char*)&op, sizeof(op), 0) == SOCKET_ERROR)
            Error_handling("send() error");
        if (recv(sock, (char*)&op, sizeof(op), 0) == SOCKET_ERROR)
            Error_handling("recv() error");

        cout << "Operation result : " << op.GetIntResult() << endl;
    }

    closesocket(sock);
    WSACleanup();

    return 0;
}
